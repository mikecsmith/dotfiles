# NON SITE SPECIFIC
# These configurations can't be configured differently for different sites.

# General display options.
[display]
# The color of the border.
border_color = "#89b4fa"
# A percentage of the page width to be applied on either side.
page_margin = 10
# The amount page down/up scrolls - can be set to full, half, or a number of lines (as a string)
page_scroll = "full"
# When colors should be shown for the page results. Options are in the Tui only, Never or Always (including piped values)
# This setting can be overriden by the --color flag.
color_mode = "tui"

# Setting for the history page
[history]
# Sets the color of the title on the history entries.
title_color = "#89b4fa"
# Sets the url color on the history entries.
url_color = "#bac2de"
# Sets the color for the time on the history entries.
time_color = "#f2cdcd"
# Sets the color of the search text.
text_color = "#74c7ec"
# Sets the type of search - valid options Fuzzy | Substring | Exact.
# Defaults to fuzzy.
search_type = "fuzzy"
# Set this to `false` to stop tracking the sites you have visited.
enabled = true

[misc]
# open_tool = "firefox" # Uses system open as default, only uncomment if you want to override this behaviour

# EXPERIMENTAL
# Set text size. Text size is only supported for kitty terminal 0.40.0+.
# If you are not running kitty 0.40.0+ raw (i.e. without screen/tmux/zellig), enabling this will not work.
# If running in an unsupported terminal or screen, this will cause the resized text to disappear.
# Text wrap will not work correctly if the resized text is larger than the wrap.
# text_size_supported = false

# Search settings.
[search]
# Available options:
# - "duckduckgo" (default) - Uses DuckDuckGo for searches.
# - "google" - Uses Google Custom Search (requires API setup).
# - "kagi" - Uses Kagi Search (requires API setup)
#
# If using Google Search, you must configure the API:
# 1. Enable the Google Custom Search API in the Google Cloud Console.
# 2. Generate an API Key.
# 3. Create a Custom Search Engine and obtain its Search Engine ID.
# 4. Set the following environment variables:
#    export IS_FAST_GOOGLE_API_KEY="your_api_key_here"
#    export IS_FAST_GOOGLE_SEARCH_ENGINE_ID="your_search_engine_id_here"
#
# If using Kagi search you must configure the api: https://help.kagi.com/kagi/api/search.html
# 1. Obtain access to the API (Currently in closed Beta)
# 2. Generate an API key.
# 3. Set the following environment variable:
#   export IS_FAST_KAGI_API_KEY
#
# To add a custom search engine, fork the repository and follow the
# instructions in src/search/search_type.rs.
engine = "duckduckgo"
# Uncommnt to restrict search results to only the given domain. Only compatable with duckduckgo search.
# Can be overriden with the --site flag.
# site = "domain.name.org"

# This determines which part of the page will be selected. No good one for a site you use? Add your own, and make a pull
# request @https://github.com/Magic-JD/is-fast.
[selectors]
"*wikipedia.org*" = "div.mw-content-ltr > *:not(table, figure, div.hatnote, div.floatright)"
"*www.baeldung.com*" = ".post-content"
"*www.w3schools.com*" = "#main"
"*linuxhandbook.com*" = "article"
"*docs.spring.io*" = "article"
"*stackoverflow.com*" = "a.question-hyperlink, time, div.user-action-time, div.js-vote-count, div.js-post-body, div.comment-body"
"*github.com/*/blob/*" = ".react-code-line-contents"
"*github.com/*/issues/*" = "main"
"*github.com*" = ".markdown-body"
"*apnews.com*" = ".RichTextStoryBody"
"*geeksforgeeks.org*" = ".text"
"*programiz.com*" = ".editor-contents"
"*merriam-webster.com*" = "div.vg"
"*developer.mozilla.org*" = "main.main-content"
"*realpython.com*" = "div.article-body > *:not(div.sidebar-module)"
"*docs.oracle.com*/tutorial/*" = "div#PageContent"
"*www.simplilearn.com*" = "article"
"*wiki.python.org*" = "div#content"
"*www.coursera.org/tutorials*" = "div.rc-Body"
"*pythonexamples.org*" = "div#entry-content"
"*hackr.io/blog*" = "article"
"*www.tutorialspoint.com*" = "div#mainContent"
"*techbeamers.com*" = "div.entry-content > *:not(div.ruby-table-contents)"
"*old.reddit.com*" = "a.title, h1.redditname, span.subscribers, p.users-online"
"*old.reddit.com/r/*/comments/*" = "a.title, a.author, div.entry > form, div.expando > form"

# This defines the other configs that should be appended for the matching sites.
# These configs should be defined in the same directory as your default config.
[custom_config]
"*finance.yahoo.com*" = ["alternate_headers.toml"]
"*stackoverflow.com*" = ["alternate_headers.toml"]


# SITE SPECIFIC - This section can be overriden in a custom config file.


# Styles for each element
# Example:
# [styles.example]
# fg = "Blue"           # Sets the foreground (text) color
# bg = "#D3D3D3"        # Sets the background color using a hex code (Light Gray)
# bg = "rgb(0, 0, 0)"   # would also be a valud option.
# bold = true           # Makes text bold
# italic = true         # Makes text italic
# underlined = true     # Underlines the text
# crossed_out = true    # Strikes through the text
# dim = true            # Makes text dimmer

[styles.h1]
bold = true
size = "Triple"

[styles.h2]
bold = true
size = "Double"

[styles.h3]
bold = true
size = "Double"

[styles.h4]
bold = true
size = "Double"

[styles.a]
fg = "Cyan"

[styles.img]
fg = "Red"
bold = true

[styles.em]
italic = true

[styles.i]
italic = true

[styles.strong]
bold = true

[styles.b]
bold = true

[styles.blockquote]
fg = "Gray"
italic = true

[styles.del]
crossed_out = true

[styles.ins]
underlined = true

[styles.mark]
fg = "Black"
bg = "Yellow"

[styles.small]
fg = "Gray"

[styles.sub]
fg = "Gray"
dim = true

[styles.sup]
fg = "Gray"
dim = true

[styles.kbd]
fg = "White"
bg = "DarkGray"

[styles.var]
fg = "Red"
italic = true

[styles.samp]
fg = "Magenta"

[styles.u]
underlined = true

[styles.li]
bold = true

[styles.dt]
bold = true

[styles.dd]
fg = "Gray"


# This defines the headers that will be included when fetching the page.
[headers]
"Accept" = "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8"
"Accept-Language" = "en-US,en;q=0.9"
"User-Agent" = "Lynx/2.8.8dev.3 libwww-FM/2.14 SSL-MM/1.4.1"


[format]
# All elements from this list are ignored.
# Limited CSS Selectors are supported (.class and #id), in the format tag#id.class.additional-class.
# E.G.
# div#center        will ignore only divs that are marked center.
# div.this.that     will ignore divs with the class this or the class that.
# .this.that        will ignore any element with the class this OR the class that.
# #that             will ignore any element with the id that.
# div#center.this   will ignore any div with the id center OR the class this.
# div.this#center   is INVALID and will not work.
# .this#center      is INVALID and will not work.
ignored_tags = [
  "script",
  "style",
  "noscript",
  "head",
  "title",
  "meta",
  "input",
  "button",
  "svg",
  "nav",
  "footer",
  "header",
  "aside",
  "gfg-tab",
]

# When this is true the new tags will replace the default tags rather than appending to them.
# clear_existing_ignored_tags = false

# Adding an element to this list will ensure that every instance of that element sits on its own line.
# Limited CSS selectors are supported as above.
block_elements = [
  "p",
  "div",
  "table",
  "article",
  "img",
  "section",
  "pre",
  "blockquote",
  "ul",
  "ol",
  "dl",
  "dt",
  "dd",
  "li",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
]

# When this is true the new tags will replace the default tags rather than appending to them.
# clear_existing_block_tags = false

# These elements should be indented when nested.
# Limited CSS selectors are supported as above.
indent_elements = ["li"]

# When this is true the new tags will replace the default tags rather than appending to them.
# clear_existing_indent_tags = false


# Section relating to syntax highlighting.
[syntax]
# This is the language that will be used for syntax highlighting if it cannot be deduced from the CSS of the page.
default_language = "rust"
# Valid themes
# InspiredGitHub
# Solarized (dark)
# Solarized (light)
# base16-eighties.dark
# base16-mocha.dark
# base16-ocean.dark
# base16-ocean.light
theme = "base16-ocean.dark"


# Caching stores the raw html that is called associated with the url. When enabled it provides results you have seen
# before much faster. It is especially useful for scripts where you might want to select a number of different elements
# from the same page by repeatedly calling is fast on that page with different selectors.
[cache]
# The mode to use for caching. Caching is disabled by default. Options are disabled, read, write, and readwrite.
cache_mode = "disabled"
# Max size of the cache if it is used. During tests, it took around 2MB per 100 entries, but will vary with page size.
max_size = 100
# How long the cached value should be valid in seconds. NOTE: the cached data is stored with the TTL being added to the
# cached time. This means that if you change this to a longer value then change it back again the longer lived data might
# persist. If you want to remove that data you should use the --clear-cache flag.
ttl = 300
